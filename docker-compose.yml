services:
  # Serviço de Backend (API com FastAPI)
  backend:
    build: ./src/backend
    container_name: fintelli_backend
    env_file:
      - ./.env
    environment:
      # Configuração do OpenTelemetry para o Backend
      - OTEL_SERVICE_NAME=fintelli-backend
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317 # Endpoint gRPC do Collector
    ports:
      - "8001:8000"
    volumes:
      - ./src/backend/app:/app
    depends_on:
      - db
      - cache
      - otel-collector # Depende do collector para enviar telemetria
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Serviço de Banco de Dados (Postgres)
  db:
    image: postgres:14-alpine
    container_name: fintelli_db
    env_file:
      - ./.env
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Serviço de Cache (Redis)
  cache:
    image: redis:7-alpine
    container_name: fintelli_cache
    ports:
      - "6380:6379"

  # Serviço de Frontend (Nginx)
  frontend:
    build: ./src/frontend
    container_name: fintelli_frontend
    ports:
      - "8080:80"
    depends_on:
      - backend

  # --- Pilha de Observabilidade ---

  # 1. OTel Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.88.0
    container_name: fintelli_otel_collector
    command: ["--config=/etc/otelcol-contrib/config.yaml"]
    volumes:
      - ./config/otel-collector-config.yml:/etc/otelcol-contrib/config.yaml
    ports:
      - "4317:4317"  # OTLP gRPC
      - "4318:4318"  # OTLP HTTP
      - "8889:8889"  # Prometheus exporter (SPM incluído)

  # 2. Jaeger para Traces com SPM habilitado
  jaeger:
    image: jaegertracing/all-in-one:1.51
    container_name: fintelli_jaeger
    environment:
      # Configurações básicas do Jaeger
      - JAEGER_DISABLED=false
      - COLLECTOR_OTLP_ENABLED=true
      # Habilita endpoint de métricas administrativas
      - JAEGER_ADMIN_HTTP_HOST_PORT=:14269
      # Configurações de storage
      - SPAN_STORAGE_TYPE=memory
      # Configuração OTLP para usar porta diferente
      - COLLECTOR_OTLP_GRPC_HOST_PORT=:4319
      # Desabilita forwarding de traces
      - JAEGER_REPORTER_LOG_SPANS=false
      - JAEGER_ENDPOINT=
    ports:
      - "16687:16686" # UI do Jaeger
      - "14251:14250" # Coleta de traces
      - "14269:14269" # Admin port para métricas
      - "4319:4319"   # OTLP gRPC para traces
    depends_on:
      - otel-collector

  # 3. Prometheus para Métricas
  prometheus:
    image: prom/prometheus:v2.37.0
    container_name: fintelli_prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./config/spm-alerts.yml:/etc/prometheus/spm-alerts.yml
      - ./config/fintelli-enhanced-alerts.yml:/etc/prometheus/fintelli-enhanced-alerts.yml
    ports:
      - "9091:9090"
    depends_on:
      - alertmanager

  # 4. Alertmanager para Notificações
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: fintelli_alertmanager
    volumes:
      - ./config/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9093:9093"
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'

  # 5. Grafana para Dashboards
  grafana:
    image: grafana/grafana:9.1.0
    container_name: fintelli_grafana
    ports:
      - "3001:3000"  # Mudando para porta 3001 para evitar conflitos
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

volumes:
  postgres_data:
