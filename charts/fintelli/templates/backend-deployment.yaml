apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "finance-stack.backend.name" . }}
  labels:
    app: backend
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.backend.service.port }}
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.auth.database }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.auth.username }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-password
            - name: GEMINI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: gemini-secret
                  key: api-key
            # Endpoints dos servi√ßos (descobertos via DNS do K8s)
            - name: POSTGRES_HOST
              value: "{{ .Release.Name }}-postgresql"
            - name: REDIS_HOST
              value: "{{ .Release.Name }}-redis-master"
            # OTel Config
            - name: OTEL_SERVICE_NAME
              value: "finance-backend"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://{{ include "finance-stack.otel-collector.name" . }}:4317"
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "finance-stack.backend.name" . }}
spec:
  type: {{ .Values.backend.service.type }}
  ports:
    - port: {{ .Values.backend.service.port }}
      targetPort: {{ .Values.backend.service.port }}
  selector:
    app: backend
